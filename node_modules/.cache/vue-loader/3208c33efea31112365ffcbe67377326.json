{"remainingRequest":"/home/luis/VueTutorials/real-world-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/luis/VueTutorials/real-world-vue/src/views/EventShow.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/luis/VueTutorials/real-world-vue/src/views/EventShow.vue","mtime":1565051457573},{"path":"/home/luis/VueTutorials/real-world-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/luis/VueTutorials/real-world-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/luis/VueTutorials/real-world-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/luis/VueTutorials/real-world-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport EventsService from '@/services/EventService'\nexport default {\n  props: ['id'],\n  data(){\n    return {\n      event: {}\n    }\n  },\n  created(){\n    EventsService.getEvent(this.id)\n      .then(response =>{\n        this.event = response.data\n      })\n      .catch(erro =>{\n        console.log('There was an error: '+err.response)\n      })\n  }\n}\n",{"version":3,"sources":["EventShow.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EventShow.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n        <div class=\"event-header\">\n          <span class=\"eyebrow\">@{{ event.time }} on {{ event.date }}</span>\n          <h1 class=\"title\">{{ event.title }}</h1>\n          <h5>Organized by {{ event.organizer }}</h5>\n          <h5>Category: {{ event.category }}</h5>\n        </div>\n        <BaseIcon name=\"map\"><h2>Location</h2></BaseIcon>\n        <address>{{ event.location }}</address>\n        <h2>Event details</h2>\n        <p>{{ event.description }}</p>\n        <h2>Attendees\n          <span class=\"badge -fill-gradient\">{{ event.attendees.length }}</span>\n        </h2>\n        <ul class=\"list-group\">\n          <li v-for=\"(attendee, index) in event.attendees\" :key=\"index\" class=\"list-item\">\n            <b>{{ attendee.name }}</b>\n          </li>\n        </ul>\n      </div>\n</template>\n<script>\nimport EventsService from '@/services/EventService'\nexport default {\n  props: ['id'],\n  data(){\n    return {\n      event: {}\n    }\n  },\n  created(){\n    EventsService.getEvent(this.id)\n      .then(response =>{\n        this.event = response.data\n      })\n      .catch(erro =>{\n        console.log('There was an error: '+err.response)\n      })\n  }\n}\n</script>\n<style scoped>\n    .location {\n      margin-bottom: 0;\n    }\n    .location > .icon {\n      margin-left: 10px;\n    }\n    .event-header > .title {\n      margin: 0;\n    }\n    .list-group {\n      margin: 0;\n      padding: 0;\n      list-style: none;\n    }\n    .list-group > .list-item {\n      padding: 1em 0;\n      border-bottom: solid 1px #e5e5e5;\n    }\n    </style>\n"]}]}